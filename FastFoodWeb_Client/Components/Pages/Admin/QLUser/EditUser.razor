@page "/edituser/{Id}"
@using FastFoodWeb_Client.Components.Layout
@layout AdminLayout

@using Data.Models.UserModels
@using FastFoodWeb_Client.HttpRepositories.Interfaces
@inject IHttpUserService UserService
@inject NavigationManager NavigationManager


<!-- begin row -->
<div class="row">
    <div class="col-md-12 m-b-30">
        <!-- begin page title -->
        <div class="d-block d-sm-flex flex-nowrap align-items-center">
            <div class="page-title mb-2 mb-sm-0">
                <h1>Sửa thông tin người dùng</h1>
            </div>
        </div>
        <!-- end page title -->
    </div>
</div>
<!-- end row -->
<!-- begin row -->
<div class="row editable-wrapper">
    <div class="col-lg-12">
        <div class="row">
            <div class="col-md-6 mx-auto">
                <EditForm Model="user" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="form-group">
                            <div class="alert alert-danger">
                                @(errorMessage)
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        <label class="control-label">Họ và Tên</label>
                        <InputText @bind-Value="user.FullName" class="form-control" />
                        <ValidationMessage For="@(() => user.FullName)" />
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label class="control-label">Email</label>
                            <InputText @bind-Value="user.Email" class="form-control" disabled />
                            <ValidationMessage For="@(() => user.Email)" />
                        </div>
                        <div class="form-group col-md-6">
                            <label class="control-label">Số điện thoại</label>
                            <InputText @bind-Value="user.PhoneNumber" class="form-control" />
                            <ValidationMessage For="@(() => user.PhoneNumber)" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Địa chỉ</label>
                        <InputText @bind-Value="user.Address" class="form-control" />
                        <ValidationMessage For="@(() => user.Address)" />
                    </div>

                    <div class="form-group">
                        <button class="btn btn-primary mb-4 w-100" type="submit">Lưu Thay Đổi</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>
<!-- end row -->
@code {
    [Parameter]
    public string Id { get; set; }

    private UserForUpdate user = new UserForUpdate();
    private UserForView userView = new UserForView();
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        userView = await UserService.GetUserByIdAsync(Id);
        user = new UserForUpdate
            {
                FullName = userView.FullName,
                Email = userView.Email,
                PhoneNumber = userView.PhoneNumber,
                Address = userView.Address
            };
    }

    private async Task HandleValidSubmit()
    {
        
        try
        {
            await UserService.UpdateUserAsync(Id, user);
            NavigationManager.NavigateTo("/users");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
