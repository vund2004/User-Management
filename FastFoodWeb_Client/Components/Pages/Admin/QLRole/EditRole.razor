@page "/editrole/{Id}"
@using FastFoodWeb_Client.Components.Layout
@layout AdminLayout

@using Data.Models.RoleModels
@using FastFoodWeb_Client.HttpRepositories.Interfaces
@inject IHttpRoleService RoleService
@inject NavigationManager NavigationManager

<div class="col-md-12">
    <div class="card card-statistics">
        <div class="card-header">
            <div class="card-heading">
                <h4 class="card-title">Edit Role</h4>
            </div>
        </div>
        <div class="card-body">
            <EditForm Model="@roleForEdit" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="form-group">
                        <div class="alert alert-danger">
                            @(errorMessage)
                        </div>
                    </div>
                }
                <div class="form-group">
                    <label for="roleId">Id Role</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-key"></i></span>
                        </div>
                        <InputText id="roleId" class="form-control" @bind-Value="roleView.Id" readonly />
                    </div>
                </div>
                <div class="form-group">
                    <label for="roleName">Role</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-user"></i></span>
                        </div>
                        <InputText id="roleName" class="form-control" @bind-Value="roleForEdit.Name" />
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
                <a href="roles">
                    <button type="button" class="btn btn-danger">Back</button>
                </a>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    private RoleForUpdate roleForEdit = new RoleForUpdate();
    private RoleForView roleView = new RoleForView();
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadRoleData();
    }

    private async Task LoadRoleData()
    {
        roleView = await RoleService.GetRoleByIdAsync(Id);
        roleForEdit = new RoleForUpdate
            {
                Name = roleView.Name
            };
    }


    private async Task HandleValidSubmit()
    {
        try
        {
            await RoleService.UpdateRoleAsync(Id, roleForEdit);
            NavigationManager.NavigateTo("/roles");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}