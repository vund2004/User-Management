@page "/addrole"
@using FastFoodWeb_Client.Components.Layout
@layout AdminLayout

@using Data.Models.RoleModels
@using FastFoodWeb_Client.HttpRepositories.Interfaces
@inject IHttpRoleService RoleService
@inject NavigationManager navigationManager

<div class="col-md-12">
    <div class="card card-statistics">
        <div class="card-header">
            <div class="card-heading">
                <h4 class="card-title">Create Role</h4>
            </div>
        </div>
        <div class="card-body">
            <EditForm Model="@roleForCreate" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="form-group">
                        <div class="alert alert-danger">
                            @(errorMessage)
                        </div>
                    </div>
                }
                <div class="form-group">
                    <label for="roleName">Role</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-user"></i></span>
                        </div>
                        <InputText id="roleName" class="form-control" @bind-Value="roleForCreate.Name" />
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
                <a href="Role">
                    <button type="button" class="btn btn-danger">Back</button>
                </a>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private RoleForCreate roleForCreate = new RoleForCreate();
    private string errorMessage;
    private async Task HandleValidSubmit()
    {
        try
        {
            await RoleService.CreateRoleAsync(roleForCreate);
            navigationManager.NavigateTo("/roles");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}