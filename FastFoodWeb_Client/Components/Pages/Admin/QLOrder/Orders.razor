@page "/orders"
@using FastFoodWeb_Client.Components.Layout
@layout AdminLayout

@using Data.Models.OrderModels
@using FastFoodWeb_Client.HttpRepositories.Interfaces
@inject IHttpOrderService OrderService
@inject NavigationManager Navigation


<!-- begin row -->
<div class="row">
    <div class="col-md-12 m-b-30">
        <!-- begin page title -->
        <div class="d-block d-sm-flex flex-nowrap align-items-center">
            <div class="page-title mb-2 mb-sm-0">
                <h1>Quản lí Đơn Hàng</h1>
            </div>
        </div>
        <!-- end page title -->
    </div>
</div>
<!-- end row -->
<!-- begin row -->
<div class="row editable-wrapper">
    <div class="col-lg-12">
        <div class="card card-statistics">
            <div class="card-body">
                @if (orders == null)
                {
                    <p>Loading...</p>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table display responsive nowrap table-light table-bordered">
                            <thead class="thead-light text-center">
                                <tr>
                                    <th>Mã đơn</th>
                                    <th>Thời gian đặt</th>
                                    <th>Tên khách hàng</th>
                                    <th>Trạng Thái</th>
                                    <th>Giao Hàng</th>
                                    <th>Tổng Tiền</th>
                                    <th>Chức năng</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in orders)
                                {
                                    <tr class="text-center">
                                        <td>@order.Id</td>
                                        <td>@order.OrderDate?.ToString("g")</td>
                                        <td>@order.FullName</td>
                                        <td>
                                            <span class="mr-2 mb-2 mr-sm-0 mb-sm-0 badge
                                                @(order.OrderStatus == "Pending" ? "badge-secondary" :
                                                  order.OrderStatus == "UnPaid" ? "badge-info" :
                                                  order.OrderStatus == "Paid" ? "badge-success" :
                                                  "badge-danger")">@order.OrderStatus</span>
                                        </td>
                                        <td>
                                            <span class="mr-2 mb-2 mr-sm-0 mb-sm-0 badge
                                                @(order.ShippingStatus == "InProgress" ? "badge-info" :
                                                  order.ShippingStatus == "Delivered" ? "badge-success" : ""
                                                  )">@order.ShippingStatus</span>
                                        </td>
                                        <td>@order.TotalAmount.ToString("C")</td>
                                        <td>
                                            <a href="@($"editorder/{order.Id}")" class="tabledit-edit-button btn btn-sm btn-primary">
                                                <span><i class="dashicons dashicons-admin-customizer"></i></span> Sửa
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <nav aria-label="Page navigation example">
                            <ul class="pagination justify-content-end">
                                <!-- Example static pagination -->
                                <li class="page-item disabled">
                                    <a class="page-link" href="#" tabindex="-1">Previous</a>
                                </li>
                                <li class="page-item"><a class="page-link" href="#">1</a></li>
                                <li class="page-item active"><a class="page-link" href="#">2</a></li>
                                <li class="page-item"><a class="page-link" href="#">3</a></li>
                                <li class="page-item">
                                    <a class="page-link" href="#">Next</a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private IEnumerable<OrderForView> orders;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            orders = await OrderService.GetAllOrdersAsync();
        }
        catch (Exception ex)
        {
            // Handle error (e.g., show a message to the user)
            Console.WriteLine($"Error fetching orders: {ex.Message}");
            orders = new List<OrderForView>(); // Ensure the variable is initialized
        }
    }
}