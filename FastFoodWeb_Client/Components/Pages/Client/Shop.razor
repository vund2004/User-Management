@page "/shop"
@using FastFoodWeb_Client.HttpRepositories.Interfaces
@using Data.Models.ProductModels
@using Data.Models.CategoryModels
@inject IHttpProductService ProductService
@inject IHttpCategoryService CategoryService

<PageTitle>Sản phẩm</PageTitle>

<!-- Breadcrumb Begin -->
<div class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6">
                <div class="breadcrumb__text">
                    <h2>Sản Phẩm</h2>
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6">
                <div class="breadcrumb__links">
                    <a href="/">Trang Chủ</a>
                    <span>Sản Phẩm</span>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Shop Section Begin -->
<section class="shop spad">
    <div class="container">
        <div class="shop__option">
            <div class="row">
                <div class="col-lg-6 col-md-6">
                    <div class="shop__option__search">
                        <EditForm Model="@SearchModel" OnValidSubmit="SearchProducts">
                            <DataAnnotationsValidator />
                            <InputText @bind-Value="SearchModel.SearchTerm" id="searchTerm" placeholder="Từ khóa sản phẩm..." />
                            <button type="submit"><i class="fa fa-search"></i></button>
                        </EditForm>
                    </div>
                </div>
                <div class="col-lg-4 col-md-4">
                    <div class="shop__option__right option1">
                        <select class="form-select" @bind="SearchModel.PriceRange">
                            <option value="">Sản phẩm theo giá</option>
                            <option value="0-50000">0-50000</option>
                            <option value="50000-100000">50000-100000</option>
                            <option value="100000-500000">100000-500000</option>
                        </select>
                    </div>
                </div>
                <div class="col-lg-2 col-md-2">
                    <div class="shop__option__right">
                        <select class="form-select" @bind="SearchModel.SortOption">
                            <option value="">Sắp xếp</option>
                            <option value="asc">A to Z</option>
                            <option value="desc">Z to A</option>
                            <option value="price-asc">Giá thấp đến cao</option>
                            <option value="price-desc">Giá cao đến thấp</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div id="productList" class="row">
                    @if (Products == null)
                    {
                        <div class="col-12">
                            <p>Đang tải sản phẩm...</p>
                        </div>
                    }
                    else if (Products.Any())
                    {
                        @foreach (var product in Products.Skip((CurrentPage - 1) * ItemsPerPage).Take(ItemsPerPage))
                        {
                            <div class="col-lg-3 col-md-6 col-sm-6">
                                <div class="product__item">
                                    <div class="product__item__pic set-bg">
                                        <a href="detailproduct/@product.Id">
                                            <img src="@product.Image" />
                                        </a>
                                        <div class="product__label">
                                            <span>@product.CategoryName</span>
                                        </div>
                                    </div>
                                    <div class="product__item__text">
                                        <h6><a href="detailproduct/@product.Id">@product.ProductName</a></h6>
                                        <div class="product__item__price">@product.Price.ToString("C")</div>
                                        <div class="cart_add">
                                            <a href="cart">Thêm vào giỏ</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-12">
                            <p>Không tìm thấy sản phẩm nào phù hợp.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="shop__last__option">
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-6">
                    <div class="shop__pagination">
                        <nav aria-label="Page navigation example">
                            <ul class="pagination">
                                <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                                    <button class="page-link" @onclick="() => CurrentPage = 1">
                                        Đầu
                                    </button>
                                </li>
                                <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                                    <button class="page-link" @onclick="() => CurrentPage -= 1">
                                        Trước
                                    </button>
                                </li>

                                <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
                                    <button class="page-link" @onclick="() => CurrentPage += 1">
                                        Sau
                                    </button>
                                </li>
                                <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
                                    <button class="page-link" @onclick="() => CurrentPage = TotalPages">
                                        Cuối
                                    </button>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6">
                    <div class="shop__last__text">
                        <p>Hiển thị @(CurrentPage * ItemsPerPage - (ItemsPerPage - 1)) - @(CurrentPage * ItemsPerPage < TotalProductsCount ? CurrentPage * ItemsPerPage : TotalProductsCount) trên @TotalProductsCount kết quả</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Shop Section End -->
@code {
    private IEnumerable<ProductForView>? Products;
    private SearchProductModel SearchModel = new SearchProductModel();
    private int CurrentPage = 1;
    private int ItemsPerPage = 8;
    private int TotalProductsCount = 0;
    private int TotalPages => (int)Math.Ceiling((double)TotalProductsCount / ItemsPerPage);

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        Products = await ProductService.GetAllProductsAsync();
        await LoadCategories();
        TotalProductsCount = Products?.Count() ?? 0;
    }

    private async Task LoadCategories()
    {
        foreach (var product in Products)
        {
            product.CategoryName = (await CategoryService.GetCategory(product.Category_Id ?? Guid.Empty))?.Name;
        }
    }

    private async Task SearchProducts()
    {
        CurrentPage = 1; // Reset trang hiện tại

        // Lọc sản phẩm theo từ khóa
        if (!string.IsNullOrEmpty(SearchModel.SearchTerm))
        {
            Products = Products?.Where(p => p.ProductName.ToLower().Contains(SearchModel.SearchTerm.ToLower())).ToList();
        }
        else
        {
            // Nếu SearchTerm rỗng, tải lại toàn bộ sản phẩm
            Products = await ProductService.GetAllProductsAsync();
            await LoadCategories();
        }

        // Lọc sản phẩm theo khoảng giá
        if (!string.IsNullOrEmpty(SearchModel.PriceRange))
        {
            var priceRanges = SearchModel.PriceRange.Split('-');
            if (priceRanges.Length == 2 && decimal.TryParse(priceRanges[0], out decimal minPrice) && decimal.TryParse(priceRanges[1], out decimal maxPrice))
            {
                Products = Products?.Where(p => p.Price >= minPrice && p.Price <= maxPrice).ToList();
            }
        }
        else
        {
            // Nếu PriceRange rỗng, tải lại toàn bộ sản phẩm
            Products = await ProductService.GetAllProductsAsync();
            await LoadCategories();
        }

        // Sắp xếp sản phẩm
        if (!string.IsNullOrEmpty(SearchModel.SortOption))
        {
            switch (SearchModel.SortOption)
            {
                case "asc":
                    Products = Products?.OrderBy(p => p.ProductName).ToList();
                    break;
                case "desc":
                    Products = Products?.OrderByDescending(p => p.ProductName).ToList();
                    break;
                case "price-asc":
                    Products = Products?.OrderBy(p => p.Price).ToList();
                    break;
                case "price-desc":
                    Products = Products?.OrderByDescending(p => p.Price).ToList();
                    break;
            }
        }
        else
        {
            // Nếu SortOption rỗng, tải lại toàn bộ sản phẩm
            Products = await ProductService.GetAllProductsAsync();
            await LoadCategories();
        }

        // Cập nhật tổng số sản phẩm sau khi lọc
        TotalProductsCount = Products?.Count() ?? 0;
    }
}